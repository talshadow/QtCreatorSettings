<?xml version="1.0" encoding="UTF-8"?>
<snippets>
    <snippet group="C++" trigger="class" id="cpp_genericclass" complement="" removed="false" modified="true">class $name$ {
public:
  $name$() {}
  ~virtual $name$() = default;
};</snippet>
    <snippet group="C++" trigger="class" id="cpp_qobjectclass" complement="derived from QObject" removed="false" modified="true">class $name$ : public QObject {
  Q_OBJECT
public:
  $name$() {}
  virtual ~$name$() {}
};</snippet>
    <snippet group="C++" trigger="class" id="cpp_qwidgetclass" complement="derived from QWidget" removed="false" modified="true">class $name$ : public QWidget {
  Q_OBJECT
public:
  $name$() {}
  virtual ~$name$() {}
};</snippet>
    <snippet group="C++" trigger="class" id="cpp_classtemplate" complement="template" removed="false" modified="true">template &lt;typename $T$&gt;
class $name$ {
public:
  $name$() {}
};</snippet>
    <snippet group="C++" trigger="do" id="cpp_do" complement="" removed="false" modified="true">do {
  $$
} while ($condition$);</snippet>
    <snippet group="C++" trigger="else" id="cpp_else" complement="" removed="false" modified="true">else {
  $$
}</snippet>
    <snippet group="C++" trigger="else" id="cpp_elsewithif" complement="with if" removed="false" modified="true">else if ($condition$) {
  $$
}</snippet>
    <snippet group="C++" trigger="for" id="cpp_for" complement="" removed="false" modified="true">for (int $var$ = 0; $var$ &lt; $total$; ++$var$) {
  $$
}</snippet>
    <snippet group="C++" trigger="foreach" id="cpp_foreach" complement="" removed="false" modified="true">foreach ($var$, $container$) {
  $$
}</snippet>
    <snippet group="C++" trigger="if" id="cpp_if" complement="" removed="false" modified="true">if ($condition$) {
  $$
}</snippet>
    <snippet group="C++" trigger="if" id="cpp_ifandelse" complement="and else" removed="false" modified="true">if ($condition$) {
  $$
} else {
}</snippet>
    <snippet group="C++" trigger="main" id="cpp_main" complement="" removed="false" modified="true">int main(int argc, char *argv[]) {
  $$
  return 0;
}
</snippet>
    <snippet group="C++" trigger="namespace" id="cpp_namespace" complement="" removed="false" modified="true">namespace $name$ {
  $$
}</snippet>
    <snippet group="C++" trigger="struct" id="cpp_genericstruct" complement="" removed="false" modified="true">struct $name$ {
  $name$() {}
};</snippet>
    <snippet group="C++" trigger="struct" id="cpp_structtemplate" complement="template" removed="false" modified="true">template &lt;typename $T$&gt;
struct $name$ {
  $name$() {}
};</snippet>
    <snippet group="C++" trigger="switch" id="cpp_switch" complement="" removed="false" modified="true">switch ($control$) {
case $value$:
  $$
  break;
default:
  break;
}</snippet>
    <snippet group="C++" trigger="try" id="cpp_trycatch" complement="and catch" removed="false" modified="true">try {
  $$
} catch (...) {
}</snippet>
</snippets>
